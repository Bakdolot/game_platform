# Generated by Django 3.2.7 on 2021-09-09 12:07

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Battle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название')),
                ('description', models.TextField(verbose_name='Описание')),
                ('rate', models.DecimalField(decimal_places=2, max_digits=7, verbose_name='Сумма брони')),
                ('start_date', models.DateTimeField(default=datetime.datetime(2021, 9, 9, 12, 7, 36, 968101, tzinfo=utc), verbose_name='Время начало')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создание')),
                ('status', models.CharField(choices=[('1', 'В ожидании'), ('2', 'В процессе'), ('3', 'Закончено')], max_length=50, verbose_name='Статус')),
                ('is_published', models.BooleanField(default=False, verbose_name='Опубликован')),
            ],
            options={
                'verbose_name': 'Битва',
                'verbose_name_plural': 'Битвы',
                'ordering': ['-create_at'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='Questions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Вопрос')),
                ('text', models.TextField(verbose_name='Текст')),
            ],
            options={
                'verbose_name': 'Вопрос',
                'verbose_name_plural': 'Вопросы',
            },
        ),
        migrations.CreateModel(
            name='QuestionHelp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, verbose_name='E-Mail')),
                ('text', models.TextField(verbose_name='Текст')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question', to='main.questions', verbose_name='Вопрос')),
            ],
            options={
                'verbose_name': 'Помощь',
                'verbose_name_plural': 'Помощь',
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название')),
                ('image', models.ImageField(upload_to='media/gameimages/f{name}')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.category', verbose_name='Категорий')),
                ('followers', models.ManyToManyField(to=settings.AUTH_USER_MODEL, verbose_name='Подпсчики')),
            ],
            options={
                'verbose_name': 'Игра',
                'verbose_name_plural': 'Игры',
            },
        ),
        migrations.CreateModel(
            name='BattleResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='Описание')),
                ('team', models.CharField(max_length=200, verbose_name='Команда')),
                ('battle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.battle', verbose_name='Битва')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Заказчик')),
                ('player_1', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='battle_response_player_1', to=settings.AUTH_USER_MODEL, verbose_name='Игрок 1')),
                ('player_2', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='battle_response_player_2', to=settings.AUTH_USER_MODEL, verbose_name='Игрок 2')),
                ('player_3', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='battle_response_player_3', to=settings.AUTH_USER_MODEL, verbose_name='Игрок 3')),
                ('player_4', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='battle_response_player_4', to=settings.AUTH_USER_MODEL, verbose_name='Игрок 4')),
                ('player_5', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='battle_response_player_5', to=settings.AUTH_USER_MODEL, verbose_name='Игрок 5')),
            ],
            options={
                'verbose_name': 'Ответ',
                'verbose_name_plural': 'Ответы',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='BattleMembers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('format', models.CharField(choices=[('1', '1x1'), ('2', '3x3'), ('3', '5x5')], max_length=10, verbose_name='Формат')),
                ('team', models.CharField(max_length=200, verbose_name='Команда')),
                ('battle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.battle', verbose_name='Битва')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Заказчик')),
                ('player_1', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='battle_member_player_1', to=settings.AUTH_USER_MODEL, verbose_name='Игрок 1')),
                ('player_2', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='battle_member_player_2', to=settings.AUTH_USER_MODEL, verbose_name='Игрок 2')),
                ('player_3', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='battle_member_player_3', to=settings.AUTH_USER_MODEL, verbose_name='Игрок 3')),
                ('player_4', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='battle_member_player_4', to=settings.AUTH_USER_MODEL, verbose_name='Игрок 4')),
                ('player_5', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='battle_member_player_5', to=settings.AUTH_USER_MODEL, verbose_name='Игрок 5')),
            ],
            options={
                'verbose_name': 'Участники битвы',
                'verbose_name_plural': 'Участники битвы',
                'ordering': ['-id'],
            },
        ),
        migrations.AddField(
            model_name='battle',
            name='game',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.game', verbose_name='Игра'),
        ),
        migrations.AddField(
            model_name='battle',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Заказчик'),
        ),
        migrations.AddField(
            model_name='battle',
            name='reposts',
            field=models.ManyToManyField(related_name='reposts', to=settings.AUTH_USER_MODEL, verbose_name='Репосты'),
        ),
        migrations.AddField(
            model_name='battle',
            name='views',
            field=models.ManyToManyField(related_name='views', to=settings.AUTH_USER_MODEL, verbose_name='Просмотры'),
        ),
    ]
